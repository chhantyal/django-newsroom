#summary Define the sections module which is used to group content based on real world topics.

= Introduction =

Sections are a top level collection of stories groped by topic.  For instance, a section on the site related to the Housing Crisis could list stories based on the following more general topics “housing,” “banking,” “mortgages” and that would live under the site at 
{{{
http://news21.com/economy/housing-crisis/
}}}

A publication might want to create/modify sections at any point in time, depending on current events.  This module should provide an editor with the functionality to perform such a task.  There is potential for the Sections module to touch any part of content in the system, or just stories.  At the time of this writing we are focusing on how sections work with stories.

== Section Paths ==

A Section Path is a term we are using to describe free-from strings defined by editors or authors that allow you to categorize content.  The strings follow a simple convention using forward slashes:

{{{
/people/george_bush/
/places/europe/france/region/paris/neighborhood
/topics/immigration
/events/2009/inauguration
}}}

== Schema ==

{{{
section (n) ---- (n) section_path (n) ---- (n) stories
}}}

= Sections Editor =

The Sections Editor provides an interface for creating new Section Paths and Sections. 



= Models =

{{{
class SectionPath(models.Model):

    section_path = models.CharField(max_length=256)

    def __unicode__(self):
        return u"%s" % (self.section_path)

class Section(models.Model):

    title = models.CharField(max_length=256)
    slug = models.SlugField(unique=True)
    description = models.TextField()
    collection = models.ManyToManyField(SectionPath) 
        
    def __unicode__(self):
        return u"%s" % (self.title)
}}}


= Template Tags =

Within the templates, there might be a need to access arbitrary content based on section path. For example, on the /economy/ page, it would be cool to be able to put in a “Housing Crisis” sidebar that pulls in the appropriate content with something like:

{{{
{% for get_stories_by_section /economy/housing-crisis/ as story %}
   <a href="{{story.get_absolute_url}}">{{story}}</a>
{% endfor %}
}}}

= Stories Example =

In this example a screen provides you with a list of checkboxes to relate a story to one or more Section Paths.

Here is a mockup:

http://api.ning.com/files/nLWRHw63e1aqEa0KxR8LNjowx5MawoaxBozi7nKW30c1X6Nc-SDeta-sOC0Yovimz60dJXz-Xtu3UTjOD2NxM7E5A59VlJVf/photo.jpg?width=737&height=552

= Request example =

Description here...

{{{
GET /economy/housing-crisis/
}}}

= view =

{{{
def section_index(request, sections, section_slug=None):
    ...
    if sections:
        stories = Story.objects.filter( section=Section.objects.get(slug=section_slug) )
}}}