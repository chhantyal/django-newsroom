#summary Strategies to handle multiple layouts in story pages

= Introduction =

Stories are composed of pages and these pages will contain layout information to define how the page is rendered.  At the time of this writing this layout feature only relates to the stories module.

= Templates =

For example, on the backend we start with a set of pre-defined templates for a page:

{{{
stories/page_base_1col.html
stories/page_base_2col.html
stories/page_base_3col.html
stories/page_base_3col_bigleadart.html
stories/page_base_3col_noart.html
}}}

Each template will have the required html and css associated with them to create a layout structure for a specific page.

New templates can be installed and should use the available template context and be valid html.  A page in a story might require a special template, for example, and the system should be flexible enough to accommodate that.

= Columns =

Column breaks are a bit of text that you insert in your content to define where new columns should be started.  The interface to define what layout you would like to use is defined by using column break tags.  So within your page if you want a new column you define a column break, like:

{{{
<!-- column break -->
}}}

The page view will parse the page content and depending on how many column breaks exist will choose the appropriate base template for rendering.  If there are more than the supported column breaks in a page body the parser will raise an except or ignore it (TODO).

= Grids =

Each of the supported backend templates will be based on a grid layout, like [http://960.gs/ 960.gs].  A  photoshop document or image with the grid structure will be provided.  The grid template can be used to mockup your page in photoshop or on paper, as well as providing you with pixel dimensions for your media within the templates.  

This should be sufficient for the authors to plan their story layout and have a complete idea of story layout before approaching the CMS with their final and vetted media.

= Examples =

Recently Marco introduced a javascript page editor.  So one solution to the page layout problem might be solved by javascript.  An example process might be:

Javascript Page Layout Editor

 # create your page content in a textarea introducing media tags or column tags into the content textarea.  Introduce different media elemets.

 # then click save and preview.  the preview screen provides you with each element, text and media as blocks in which you can expand into some constrained layout screen.

 # when you save the preview, it uses ajax to post data to a view that saves the html.  which is mostly div tags corresponding to whatever grid system we are using.

Choose layout

 # page edit screen allows you to change your layout providing visual thumbnail of the layout.

 # page list screen allows you to choose, preview and save different layouts